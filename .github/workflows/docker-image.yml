# 工作流程名称
name: Docker Image CI

# 触发条件：当有代码推送到 main 分支，或有 PR 指向 main 分支时
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push: # 将任务名取得更清晰
    runs-on: ubuntu-latest
    # 关键步骤1：为任务授予写入 GitHub Packages 的权限
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 关键步骤2：登录到 GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # github.actor 是触发工作流程的用户名
          # secrets.GITHUB_TOKEN 是一个自动生成的、用于身份验证的令牌
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 关键步骤3：构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # context: . 表示使用当前目录作为构建上下文
          context: .
          # push: true 表示在构建成功后推送到仓库
          push: true
          # tags: 指定镜像的地址和标签。这是您想要的“地址”
          # github.repository_owner 是您的 GitHub 用户名或组织名
          tags: ghcr.io/${{ github.repository_owner }}/hugg:latest
